syntax = "proto2";

package goblet;

/////////////////////////////////////////////////////////
// Goblet Objects                                      //
/////////////////////////////////////////////////////////

// Match bits
enum MatchState {
    CREATING = 0;
    PLAYING = 1;
    FINISHING = 2;
}
enum MatchMode {
    DEFAULT = 0;
    BLITZ = 1;
    STRATEGIC = 2;
}

// General response message
message ResponseObject {
	enum Status {
		OK = 0;
		ERROR = 1;
	}
	required Status status = 1;
	optional string error = 2;
}

// Match description
message Match {
    message Player {
        required string name = 1;
    }
    required uint32 id = 1;
    required MatchState state = 2;
    repeated Player players = 3;
    required uint32 players_max = 4;
    required uint64 start_time = 5;
    required MatchMode mode = 6;
    required uint32 duration = 7;
    optional bytes extra = 8;
}

/////////////////////////////////////////////////////////

message AccountNewReq {
	required string email = 1;
	required string password = 2;
}

message AccountNewResp {
	enum Status {
		OK = 0;
		ERROR = 1;
	}
	required Status status = 1;
	optional string error = 2;
}

message AccountLoginReq {
	required string email = 1;
	required string password = 2;
}

message AccountLoginResp {
	enum Status {
		OK = 0;
		ERROR = 1;
	}
	required Status status = 1;
	message Player {
		required string name = 1;
	}
	repeated Player players = 2;
	optional string error = 3;
}

// opcode 0x1050
message PlayerNewReq {
	required string name = 1;
	required string title = 2;
	required uint32 appearance = 3;
	required string role = 4;
}

// opcode 0x1060 
message PlayerNewResp {
	enum Status {
		OK = 0;
		ERROR = 1;
	}
	required Status status = 1;
	optional string error = 3;
}

message PlayerAuthenticate {
	required bytes id = 1;
}

message PlayerLog {
	required string msg = 2;
}

message LobbyInfo {
    required ResponseObject resp = 1;
    repeated Match matches = 2;
}

message MatchCreateReq {
    required MatchMode mode = 1;
    required uint32 players_max = 2;
    optional bytes extra = 3;
}

message MatchCreateResp {
    required ResponseObject resp = 1;
    optional Match match = 2;
}

message MatchJoinReq {
    required string player = 1;
    required uint32 matchid = 2;
}

message MatchJoinResp {
    required ResponseObject resp = 1;
    optional Match match = 2;
}

message MatchLeaveReq {
    required string player = 1;
    required uint32 matchid = 2;
}

message MatchLeaveResp {
    required ResponseObject resp = 1;
}

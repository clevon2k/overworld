-define(PROTOCOLVERSION, 1).

% Session
-record(session, {
    email = none,
    authenticated = false,
    match = false,
    player = false
}).

% First two bytes of a message are its opcode which maps onto RPCs supported by and informational messages generated by the server

% System commands, account and character creation, etc 
-define(VERSION, 16#1000).
-define(HEARTBEAT, 16#1010).
-define(ACCOUNT_NEW, 16#1040).
-define(ACCOUNT_LOGIN, 16#1045).
-define(PLAYER_NEW, 16#1050).
-define(PLAYER_LIST, 16#1055).

% Chat messages, incl. PMs and ignore
-define(CHAT_LIST, 16#1100). 
-define(CHAT_JOIN, 16#1110). 
-define(CHAT_MSG, 16#1120). 
-define(CHAT_WHISPER, 16#1130). 
-define(CHAT_SYSTEM_MSG, 16#1140).

% Room messages
-define(ROOM_ENTRY, 16#1200).
-define(ROOM_NEW, 16#1210).
-define(ROOM_DEL, 16#1220).
-define(ROOM_OBJ_NEW, 16#1250). % Create/delete objects in rooms
-define(ROOM_OBJ_DEL, 16#1260).

% NPC messages?

% Script messages?

% Lobby and match creation commands
-define(MATCH_LIST, 16#2010).
-define(MATCH_CREATE, 16#2020).
-define(MATCH_JOIN, 16#2030).
-define(MATCH_LEAVE, 16#2040).
-define(MATCH_START, 16#2050).
-define(MATCH_INFO, 16#2060).
-define(MATCH_STATE, 16#2070).
-define(MATCH_PREPARE, 16#2080). % acknowledge match ready
-define(MATCH_DECIDE, 16#2082).  % send decision
-define(MATCH_EXECUTE, 16#2084). % cue to play animations
-define(MATCH_FINISH,16#2086). % show summary screen
-define(MATCH_INTENT, 16#2088). % send notification of an intended action
